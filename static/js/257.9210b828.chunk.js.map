{"version":3,"file":"static/js/257.9210b828.chunk.js","mappings":"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","sources":["API/service.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'c8ef48bae82b60cf66a4f0e6e3dd153e';\n\nexport async function requestPopularMovies() {\n  return await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n}\n\nexport async function searchMovies(value) {\n  return await axios.get(\n    `3/search/movie?api_key=${API_KEY}&query=${value}&include_adult=false`\n  );\n}\n\nexport async function moviesInfo(id) {\n  return await axios.get(`3/movie/${id}?api_key=${API_KEY}`);\n}\n\nexport async function moviesCast(id) {\n  return await axios.get(`3/movie/${id}/credits?api_key=${API_KEY}`);\n}\n\nexport async function moviesReviews(id) {\n  return await axios.get(`3/movie/${id}/reviews?api_key=${API_KEY}`);\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wraper = styled.div`\n  margin-left: ${p => p.theme.space[4]}px;\n`;\n\nexport const Overviev = styled.p`\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Genres = styled.p`\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Link = styled(NavLink)`\n  display: inline-block;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  padding: ${p => p.theme.space[3]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.textSecond};\n  border: ${p => p.theme.borders.bold};\n  border-color: ${p => p.theme.colors.background};\n  border-radius: ${p => p.theme.radii.normal};\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.textFirst};\n    background-color: ${p => p.theme.colors.background};\n  }\n`;\n\nexport const ListLink = styled.ul`\n  list-style: none;\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { moviesInfo } from 'API/service';\nimport { Box } from 'components/Box';\nimport image from 'img/image-not-found.png';\nimport {\n  Wraper,\n  Overviev,\n  Genres,\n  Link,\n  ListLink,\n} from 'pages/MovieDetails/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoad, setIsLoad] = useState(false);\n  const { detailsId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMoviesInfo = async () => {\n      try {\n        const response = await moviesInfo(detailsId);\n        setMovie(response.data);\n        setIsLoad(true);\n      } catch (error) {\n        setIsLoad(false);\n      }\n    };\n    fetchMoviesInfo();\n  }, [detailsId]);\n\n  const { poster_path, title, vote_average, overview, genres = [] } = movie;\n  const validGenres = genres.map(genre => genre.name).join(' ');\n\n  if (!isLoad) {\n    return <div>Sorry, there was an error loading data.</div>;\n  }\n\n  return (\n    <Box padding=\"20px 0px\">\n      <Link to={backLinkHref}>Back</Link>\n      <Box display=\"flex\">\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : image\n          }\n          alt={`${title}`}\n        />\n        <Wraper>\n          {' '}\n          <h2>{title}</h2>\n          <p>User score: {Math.round(vote_average * 10)}%</p>\n          <div>\n            <Overviev>Overviev</Overviev>\n            <span>{overview}</span>\n          </div>\n          <div>\n            <Genres>Genres</Genres>\n            <span>{validGenres}</span>\n          </div>\n        </Wraper>\n      </Box>\n      <Box>\n        <h2>Additional information</h2>\n        <ListLink>\n          <li>\n            <Link to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backLinkHref }}>\n              Revievs\n            </Link>\n          </li>\n        </ListLink>\n      </Box>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default MovieDetails;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["axios","API_KEY","requestPopularMovies","searchMovies","value","moviesInfo","id","moviesCast","moviesReviews","Wraper","styled","p","theme","space","Overviev","fontWeights","bold","Genres","Link","NavLink","colors","textSecond","borders","background","radii","normal","textFirst","ListLink","useState","movie","setMovie","isLoad","setIsLoad","detailsId","useParams","backLinkHref","useLocation","state","from","useEffect","fetchMoviesInfo","response","data","poster_path","title","vote_average","overview","genres","validGenres","map","genre","name","join","Box","padding","to","display","src","image","alt","Math","round","Suspense","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}