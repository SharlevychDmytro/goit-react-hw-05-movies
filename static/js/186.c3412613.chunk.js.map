{"version":3,"file":"static/js/186.c3412613.chunk.js","mappings":"0TACAA,IAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQF,IAAAA,IAAA,qCAAwCC,IADhD,0GAIA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iFACQJ,IAAAA,IAAA,iCACeC,EADf,kBACgCG,EADhC,yBADR,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,iFACQN,IAAAA,IAAA,kBAAqBM,EAArB,oBAAmCL,IAD3C,0GAIA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,iFACQN,IAAAA,IAAA,kBAAqBM,EAArB,4BAA2CL,IADnD,0GAIA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA6BF,GAA7B,iFACQN,IAAAA,IAAA,kBAAqBM,EAArB,4BAA2CL,IADnD,4G,2GCmBP,UArCgB,WACd,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAcC,EAAAA,EAAAA,MAAdD,UAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,8GAEAP,EAAAA,EAAAA,IAAcI,GAFd,OAEjBI,EAFiB,OAGvBL,EAAWK,EAASC,KAAKC,SAHF,gDAKvBP,EAAW,IALY,yDAAH,qDAQxBI,MACC,CAACH,KAGF,gCACGF,EAAQS,QACP,wBACGT,EAAQU,KAAI,gBAAGd,EAAH,EAAGA,GAAIe,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGhB,SAOb,uEAEF,SAAC,EAAAiB,SAAD,WACE,SAAC,KAAD","sources":["API/service.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'c8ef48bae82b60cf66a4f0e6e3dd153e';\n\nexport async function requestPopularMovies() {\n  return await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n}\n\nexport async function searchMovies(value) {\n  return await axios.get(\n    `3/search/movie?api_key=${API_KEY}&query=${value}&include_adult=false`\n  );\n}\n\nexport async function moviesInfo(id) {\n  return await axios.get(`3/movie/${id}?api_key=${API_KEY}`);\n}\n\nexport async function moviesCast(id) {\n  return await axios.get(`3/movie/${id}/credits?api_key=${API_KEY}`);\n}\n\nexport async function moviesReviews(id) {\n  return await axios.get(`3/movie/${id}/reviews?api_key=${API_KEY}`);\n}\n","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { moviesReviews } from 'API/service';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { detailsId } = useParams();\n\n  useEffect(() => {\n    const fetchMoviesReviews = async () => {\n      try {\n        const response = await moviesReviews(detailsId);\n        setReviews(response.data.results);\n      } catch (error) {\n        setReviews([]);\n      }\n    };\n    fetchMoviesReviews();\n  }, [detailsId]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>We don't have any reviews for this movie</div>\n      )}\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","requestPopularMovies","searchMovies","value","moviesInfo","id","moviesCast","moviesReviews","useState","reviews","setReviews","detailsId","useParams","useEffect","fetchMoviesReviews","response","data","results","length","map","author","content","Suspense"],"sourceRoot":""}